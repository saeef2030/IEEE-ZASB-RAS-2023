
DIO_DRIVER.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a34  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000bac  00000000  00000000  00000a88  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      000005ec  00000000  00000000  00001634  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 60 00 	call	0xc0	; 0xc0 <main>
  64:	0c 94 18 05 	jmp	0xa30	; 0xa30 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <delay>:
#include"../1-MCAL/1-DIO/DIO_interface.h"


/* delay function */
void delay(void)
{
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	00 d0       	rcall	.+0      	; 0x72 <delay+0x6>
  72:	00 d0       	rcall	.+0      	; 0x74 <delay+0x8>
  74:	cd b7       	in	r28, 0x3d	; 61
  76:	de b7       	in	r29, 0x3e	; 62
	for(int x=0;x<500;x++)
  78:	1c 82       	std	Y+4, r1	; 0x04
  7a:	1b 82       	std	Y+3, r1	; 0x03
  7c:	14 c0       	rjmp	.+40     	; 0xa6 <delay+0x3a>
		for(int y=0;y<500;y++)
  7e:	1a 82       	std	Y+2, r1	; 0x02
  80:	19 82       	std	Y+1, r1	; 0x01
  82:	06 c0       	rjmp	.+12     	; 0x90 <delay+0x24>
			__asm("NOP");
  84:	00 00       	nop

/* delay function */
void delay(void)
{
	for(int x=0;x<500;x++)
		for(int y=0;y<500;y++)
  86:	89 81       	ldd	r24, Y+1	; 0x01
  88:	9a 81       	ldd	r25, Y+2	; 0x02
  8a:	01 96       	adiw	r24, 0x01	; 1
  8c:	9a 83       	std	Y+2, r25	; 0x02
  8e:	89 83       	std	Y+1, r24	; 0x01
  90:	89 81       	ldd	r24, Y+1	; 0x01
  92:	9a 81       	ldd	r25, Y+2	; 0x02
  94:	21 e0       	ldi	r18, 0x01	; 1
  96:	84 3f       	cpi	r24, 0xF4	; 244
  98:	92 07       	cpc	r25, r18
  9a:	a4 f3       	brlt	.-24     	; 0x84 <delay+0x18>


/* delay function */
void delay(void)
{
	for(int x=0;x<500;x++)
  9c:	8b 81       	ldd	r24, Y+3	; 0x03
  9e:	9c 81       	ldd	r25, Y+4	; 0x04
  a0:	01 96       	adiw	r24, 0x01	; 1
  a2:	9c 83       	std	Y+4, r25	; 0x04
  a4:	8b 83       	std	Y+3, r24	; 0x03
  a6:	8b 81       	ldd	r24, Y+3	; 0x03
  a8:	9c 81       	ldd	r25, Y+4	; 0x04
  aa:	21 e0       	ldi	r18, 0x01	; 1
  ac:	84 3f       	cpi	r24, 0xF4	; 244
  ae:	92 07       	cpc	r25, r18
  b0:	34 f3       	brlt	.-52     	; 0x7e <delay+0x12>
		for(int y=0;y<500;y++)
			__asm("NOP");
}
  b2:	0f 90       	pop	r0
  b4:	0f 90       	pop	r0
  b6:	0f 90       	pop	r0
  b8:	0f 90       	pop	r0
  ba:	cf 91       	pop	r28
  bc:	df 91       	pop	r29
  be:	08 95       	ret

000000c0 <main>:

int main(void)
{
  c0:	df 93       	push	r29
  c2:	cf 93       	push	r28
  c4:	cd b7       	in	r28, 0x3d	; 61
  c6:	de b7       	in	r29, 0x3e	; 62
	/* config PC7 & PC6 & PC5 output*/
	DIO_voidInit();
  c8:	0e 94 af 00 	call	0x15e	; 0x15e <DIO_voidInit>

	DIO_u8setpInDirection(DIO_u8_PORTC,DIO_u8_PIN7,DIO_u8_OUTPUT);
  cc:	82 e0       	ldi	r24, 0x02	; 2
  ce:	67 e0       	ldi	r22, 0x07	; 7
  d0:	41 e0       	ldi	r20, 0x01	; 1
  d2:	0e 94 ce 00 	call	0x19c	; 0x19c <DIO_u8setpInDirection>
	DIO_u8SetPinValue(DIO_u8_PORTC,DIO_u8_PIN7,DIO_u8_LOW);
  d6:	82 e0       	ldi	r24, 0x02	; 2
  d8:	67 e0       	ldi	r22, 0x07	; 7
  da:	40 e0       	ldi	r20, 0x00	; 0
  dc:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <DIO_u8SetPinValue>

	DIO_u8setpInDirection(DIO_u8_PORTC,DIO_u8_PIN6,DIO_u8_OUTPUT);
  e0:	82 e0       	ldi	r24, 0x02	; 2
  e2:	66 e0       	ldi	r22, 0x06	; 6
  e4:	41 e0       	ldi	r20, 0x01	; 1
  e6:	0e 94 ce 00 	call	0x19c	; 0x19c <DIO_u8setpInDirection>
	DIO_u8SetPinValue(DIO_u8_PORTC,DIO_u8_PIN6,DIO_u8_LOW);
  ea:	82 e0       	ldi	r24, 0x02	; 2
  ec:	66 e0       	ldi	r22, 0x06	; 6
  ee:	40 e0       	ldi	r20, 0x00	; 0
  f0:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <DIO_u8SetPinValue>

	DIO_u8setpInDirection(DIO_u8_PORTC,DIO_u8_PIN5,DIO_u8_OUTPUT);
  f4:	82 e0       	ldi	r24, 0x02	; 2
  f6:	65 e0       	ldi	r22, 0x05	; 5
  f8:	41 e0       	ldi	r20, 0x01	; 1
  fa:	0e 94 ce 00 	call	0x19c	; 0x19c <DIO_u8setpInDirection>
	DIO_u8SetPinValue(DIO_u8_PORTC,DIO_u8_PIN5,DIO_u8_LOW);
  fe:	82 e0       	ldi	r24, 0x02	; 2
 100:	65 e0       	ldi	r22, 0x05	; 5
 102:	40 e0       	ldi	r20, 0x00	; 0
 104:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <DIO_u8SetPinValue>


	while(1)
	{
		/* turn on led @PC7 */
		DIO_u8SetPinValue(DIO_u8_PORTC,DIO_u8_PIN7,DIO_u8_HIGH);
 108:	82 e0       	ldi	r24, 0x02	; 2
 10a:	67 e0       	ldi	r22, 0x07	; 7
 10c:	41 e0       	ldi	r20, 0x01	; 1
 10e:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <DIO_u8SetPinValue>
		delay();
 112:	0e 94 36 00 	call	0x6c	; 0x6c <delay>
		/* turn off led @PC7*/
		DIO_u8SetPinValue(DIO_u8_PORTC,DIO_u8_PIN7,DIO_u8_LOW);
 116:	82 e0       	ldi	r24, 0x02	; 2
 118:	67 e0       	ldi	r22, 0x07	; 7
 11a:	40 e0       	ldi	r20, 0x00	; 0
 11c:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <DIO_u8SetPinValue>
		delay();
 120:	0e 94 36 00 	call	0x6c	; 0x6c <delay>
		/* turn on led @PC6 */
		DIO_u8SetPinValue(DIO_u8_PORTC,DIO_u8_PIN6,DIO_u8_HIGH);
 124:	82 e0       	ldi	r24, 0x02	; 2
 126:	66 e0       	ldi	r22, 0x06	; 6
 128:	41 e0       	ldi	r20, 0x01	; 1
 12a:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <DIO_u8SetPinValue>
		delay();
 12e:	0e 94 36 00 	call	0x6c	; 0x6c <delay>
		/* turn off led @PC6 */
		DIO_u8SetPinValue(DIO_u8_PORTC,DIO_u8_PIN6,DIO_u8_LOW);
 132:	82 e0       	ldi	r24, 0x02	; 2
 134:	66 e0       	ldi	r22, 0x06	; 6
 136:	40 e0       	ldi	r20, 0x00	; 0
 138:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <DIO_u8SetPinValue>
		delay();
 13c:	0e 94 36 00 	call	0x6c	; 0x6c <delay>
		/* turn on led @PC5 */
		DIO_u8SetPinValue(DIO_u8_PORTC,DIO_u8_PIN5,DIO_u8_HIGH);
 140:	82 e0       	ldi	r24, 0x02	; 2
 142:	65 e0       	ldi	r22, 0x05	; 5
 144:	41 e0       	ldi	r20, 0x01	; 1
 146:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <DIO_u8SetPinValue>
		delay();
 14a:	0e 94 36 00 	call	0x6c	; 0x6c <delay>
		/* turn off led @PC5 */
		DIO_u8SetPinValue(DIO_u8_PORTC,DIO_u8_PIN5,DIO_u8_LOW);
 14e:	82 e0       	ldi	r24, 0x02	; 2
 150:	65 e0       	ldi	r22, 0x05	; 5
 152:	40 e0       	ldi	r20, 0x00	; 0
 154:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <DIO_u8SetPinValue>
		delay();
 158:	0e 94 36 00 	call	0x6c	; 0x6c <delay>
 15c:	d5 cf       	rjmp	.-86     	; 0x108 <main+0x48>

0000015e <DIO_voidInit>:
#include"DIO_interface.h"
#include"DIO_private.h"
#include"DIO_config.h"

/* put parametrs on the registers */
void DIO_voidInit (void){
 15e:	df 93       	push	r29
 160:	cf 93       	push	r28
 162:	cd b7       	in	r28, 0x3d	; 61
 164:	de b7       	in	r29, 0x3e	; 62
	 DIO_u8_DDRA_REG = Conc(DIO_u8_PA7_INITIAL_DIRECTION,DIO_u8_PA6_INITIAL_DIRECTION,DIO_u8_PA5_INITIAL_DIRECTION,DIO_u8_PA4_INITIAL_DIRECTION,
 166:	ea e3       	ldi	r30, 0x3A	; 58
 168:	f0 e0       	ldi	r31, 0x00	; 0
 16a:	10 82       	st	Z, r1
                           DIO_u8_PA3_INITIAL_DIRECTION,DIO_u8_PA2_INITIAL_DIRECTION,DIO_u8_PA1_INITIAL_DIRECTION,DIO_u8_PA0_INITIAL_DIRECTION);

    DIO_u8_DDRB_REG = Conc(DIO_u8_PB7_INITIAL_DIRECTION,DIO_u8_PB6_INITIAL_DIRECTION,DIO_u8_PB5_INITIAL_DIRECTION,DIO_u8_PB4_INITIAL_DIRECTION,
 16c:	e7 e3       	ldi	r30, 0x37	; 55
 16e:	f0 e0       	ldi	r31, 0x00	; 0
 170:	10 82       	st	Z, r1
                           DIO_u8_PB3_INITIAL_DIRECTION,DIO_u8_PB2_INITIAL_DIRECTION,DIO_u8_PB1_INITIAL_DIRECTION,DIO_u8_PB0_INITIAL_DIRECTION);

    DIO_u8_DDRC_REG = Conc(DIO_u8_PC7_INITIAL_DIRECTION,DIO_u8_PC6_INITIAL_DIRECTION,DIO_u8_PC5_INITIAL_DIRECTION,DIO_u8_PC4_INITIAL_DIRECTION,
 172:	e4 e3       	ldi	r30, 0x34	; 52
 174:	f0 e0       	ldi	r31, 0x00	; 0
 176:	10 82       	st	Z, r1
                           DIO_u8_PC3_INITIAL_DIRECTION,DIO_u8_PC2_INITIAL_DIRECTION,DIO_u8_PC1_INITIAL_DIRECTION,DIO_u8_PC0_INITIAL_DIRECTION);

    DIO_u8_DDRD_REG = Conc(DIO_u8_PD7_INITIAL_DIRECTION,DIO_u8_PD6_INITIAL_DIRECTION,DIO_u8_PD5_INITIAL_DIRECTION,DIO_u8_PD4_INITIAL_DIRECTION,
 178:	e1 e3       	ldi	r30, 0x31	; 49
 17a:	f0 e0       	ldi	r31, 0x00	; 0
 17c:	10 82       	st	Z, r1
                           DIO_u8_PD3_INITIAL_DIRECTION,DIO_u8_PD2_INITIAL_DIRECTION,DIO_u8_PD1_INITIAL_DIRECTION,DIO_u8_PD0_INITIAL_DIRECTION);

    DIO_u8_PORTA_REG = Conc(DIO_u8_PA7_INITIAL_VALUE,DIO_u8_PA6_INITIAL_VALUE,DIO_u8_PA5_INITIAL_VALUE,DIO_u8_PA4_INITIAL_VALUE,
 17e:	eb e3       	ldi	r30, 0x3B	; 59
 180:	f0 e0       	ldi	r31, 0x00	; 0
 182:	10 82       	st	Z, r1
                            DIO_u8_PA3_INITIAL_VALUE,DIO_u8_PA2_INITIAL_VALUE,DIO_u8_PA1_INITIAL_VALUE,DIO_u8_PA0_INITIAL_VALUE);

    DIO_u8_PORTB_REG = Conc(DIO_u8_PB7_INITIAL_VALUE,DIO_u8_PB6_INITIAL_VALUE,DIO_u8_PB5_INITIAL_VALUE,DIO_u8_PB4_INITIAL_VALUE,
 184:	e8 e3       	ldi	r30, 0x38	; 56
 186:	f0 e0       	ldi	r31, 0x00	; 0
 188:	10 82       	st	Z, r1
                            DIO_u8_PB3_INITIAL_VALUE,DIO_u8_PB2_INITIAL_VALUE,DIO_u8_PB1_INITIAL_VALUE,DIO_u8_PB0_INITIAL_VALUE);

    DIO_u8_PORTC_REG = Conc(DIO_u8_PC7_INITIAL_VALUE,DIO_u8_PC6_INITIAL_VALUE,DIO_u8_PC5_INITIAL_VALUE,DIO_u8_PC4_INITIAL_VALUE,
 18a:	e5 e3       	ldi	r30, 0x35	; 53
 18c:	f0 e0       	ldi	r31, 0x00	; 0
 18e:	10 82       	st	Z, r1
    		DIO_u8_PC3_INITIAL_VALUE,DIO_u8_PC2_INITIAL_VALUE,DIO_u8_PC1_INITIAL_VALUE,DIO_u8_PC0_INITIAL_VALUE);

    DIO_u8_PORTD_REG = Conc(DIO_u8_PD7_INITIAL_VALUE,DIO_u8_PD6_INITIAL_VALUE,DIO_u8_PD5_INITIAL_VALUE,DIO_u8_PD4_INITIAL_VALUE,
 190:	e2 e3       	ldi	r30, 0x32	; 50
 192:	f0 e0       	ldi	r31, 0x00	; 0
 194:	10 82       	st	Z, r1
                            DIO_u8_PD3_INITIAL_VALUE,DIO_u8_PD2_INITIAL_VALUE,DIO_u8_PD1_INITIAL_VALUE,DIO_u8_PD0_INITIAL_VALUE);
	
}
 196:	cf 91       	pop	r28
 198:	df 91       	pop	r29
 19a:	08 95       	ret

0000019c <DIO_u8setpInDirection>:

u8 DIO_u8setpInDirection   (u8 Copy_u8PortId, u8 Copy_u8PinId , u8 Copy_u8PinDirection){
 19c:	df 93       	push	r29
 19e:	cf 93       	push	r28
 1a0:	cd b7       	in	r28, 0x3d	; 61
 1a2:	de b7       	in	r29, 0x3e	; 62
 1a4:	2e 97       	sbiw	r28, 0x0e	; 14
 1a6:	0f b6       	in	r0, 0x3f	; 63
 1a8:	f8 94       	cli
 1aa:	de bf       	out	0x3e, r29	; 62
 1ac:	0f be       	out	0x3f, r0	; 63
 1ae:	cd bf       	out	0x3d, r28	; 61
 1b0:	8a 83       	std	Y+2, r24	; 0x02
 1b2:	6b 83       	std	Y+3, r22	; 0x03
 1b4:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState = STD_TYPES_OK;
 1b6:	81 e0       	ldi	r24, 0x01	; 1
 1b8:	89 83       	std	Y+1, r24	; 0x01
    if( (Copy_u8PortId <= DIO_u8_PORTD) && (Copy_u8PinId <= DIO_u8_PIN7) && ((Copy_u8PinDirection == DIO_u8_OUTPUT)|| (Copy_u8PinDirection == DIO_u8_INPUT)) )
 1ba:	8a 81       	ldd	r24, Y+2	; 0x02
 1bc:	84 30       	cpi	r24, 0x04	; 4
 1be:	08 f0       	brcs	.+2      	; 0x1c2 <DIO_u8setpInDirection+0x26>
 1c0:	0c c1       	rjmp	.+536    	; 0x3da <DIO_u8setpInDirection+0x23e>
 1c2:	8b 81       	ldd	r24, Y+3	; 0x03
 1c4:	88 30       	cpi	r24, 0x08	; 8
 1c6:	08 f0       	brcs	.+2      	; 0x1ca <DIO_u8setpInDirection+0x2e>
 1c8:	08 c1       	rjmp	.+528    	; 0x3da <DIO_u8setpInDirection+0x23e>
 1ca:	8c 81       	ldd	r24, Y+4	; 0x04
 1cc:	81 30       	cpi	r24, 0x01	; 1
 1ce:	21 f0       	breq	.+8      	; 0x1d8 <DIO_u8setpInDirection+0x3c>
 1d0:	8c 81       	ldd	r24, Y+4	; 0x04
 1d2:	88 23       	and	r24, r24
 1d4:	09 f0       	breq	.+2      	; 0x1d8 <DIO_u8setpInDirection+0x3c>
 1d6:	01 c1       	rjmp	.+514    	; 0x3da <DIO_u8setpInDirection+0x23e>
	{
		switch(Copy_u8PortId)
 1d8:	8a 81       	ldd	r24, Y+2	; 0x02
 1da:	28 2f       	mov	r18, r24
 1dc:	30 e0       	ldi	r19, 0x00	; 0
 1de:	3e 87       	std	Y+14, r19	; 0x0e
 1e0:	2d 87       	std	Y+13, r18	; 0x0d
 1e2:	8d 85       	ldd	r24, Y+13	; 0x0d
 1e4:	9e 85       	ldd	r25, Y+14	; 0x0e
 1e6:	81 30       	cpi	r24, 0x01	; 1
 1e8:	91 05       	cpc	r25, r1
 1ea:	09 f4       	brne	.+2      	; 0x1ee <DIO_u8setpInDirection+0x52>
 1ec:	4f c0       	rjmp	.+158    	; 0x28c <DIO_u8setpInDirection+0xf0>
 1ee:	2d 85       	ldd	r18, Y+13	; 0x0d
 1f0:	3e 85       	ldd	r19, Y+14	; 0x0e
 1f2:	22 30       	cpi	r18, 0x02	; 2
 1f4:	31 05       	cpc	r19, r1
 1f6:	2c f4       	brge	.+10     	; 0x202 <DIO_u8setpInDirection+0x66>
 1f8:	8d 85       	ldd	r24, Y+13	; 0x0d
 1fa:	9e 85       	ldd	r25, Y+14	; 0x0e
 1fc:	00 97       	sbiw	r24, 0x00	; 0
 1fe:	71 f0       	breq	.+28     	; 0x21c <DIO_u8setpInDirection+0x80>
 200:	ed c0       	rjmp	.+474    	; 0x3dc <DIO_u8setpInDirection+0x240>
 202:	2d 85       	ldd	r18, Y+13	; 0x0d
 204:	3e 85       	ldd	r19, Y+14	; 0x0e
 206:	22 30       	cpi	r18, 0x02	; 2
 208:	31 05       	cpc	r19, r1
 20a:	09 f4       	brne	.+2      	; 0x20e <DIO_u8setpInDirection+0x72>
 20c:	77 c0       	rjmp	.+238    	; 0x2fc <DIO_u8setpInDirection+0x160>
 20e:	8d 85       	ldd	r24, Y+13	; 0x0d
 210:	9e 85       	ldd	r25, Y+14	; 0x0e
 212:	83 30       	cpi	r24, 0x03	; 3
 214:	91 05       	cpc	r25, r1
 216:	09 f4       	brne	.+2      	; 0x21a <DIO_u8setpInDirection+0x7e>
 218:	a9 c0       	rjmp	.+338    	; 0x36c <DIO_u8setpInDirection+0x1d0>
 21a:	e0 c0       	rjmp	.+448    	; 0x3dc <DIO_u8setpInDirection+0x240>
		{
			case DIO_u8_PORTA:
			    switch (Copy_u8PinDirection)
 21c:	8c 81       	ldd	r24, Y+4	; 0x04
 21e:	28 2f       	mov	r18, r24
 220:	30 e0       	ldi	r19, 0x00	; 0
 222:	3c 87       	std	Y+12, r19	; 0x0c
 224:	2b 87       	std	Y+11, r18	; 0x0b
 226:	8b 85       	ldd	r24, Y+11	; 0x0b
 228:	9c 85       	ldd	r25, Y+12	; 0x0c
 22a:	00 97       	sbiw	r24, 0x00	; 0
 22c:	d1 f0       	breq	.+52     	; 0x262 <DIO_u8setpInDirection+0xc6>
 22e:	2b 85       	ldd	r18, Y+11	; 0x0b
 230:	3c 85       	ldd	r19, Y+12	; 0x0c
 232:	21 30       	cpi	r18, 0x01	; 1
 234:	31 05       	cpc	r19, r1
 236:	09 f0       	breq	.+2      	; 0x23a <DIO_u8setpInDirection+0x9e>
 238:	d1 c0       	rjmp	.+418    	; 0x3dc <DIO_u8setpInDirection+0x240>
				{
					case DIO_u8_OUTPUT:SET_BIT(DIO_u8_DDRA_REG,Copy_u8PinId);break;
 23a:	aa e3       	ldi	r26, 0x3A	; 58
 23c:	b0 e0       	ldi	r27, 0x00	; 0
 23e:	ea e3       	ldi	r30, 0x3A	; 58
 240:	f0 e0       	ldi	r31, 0x00	; 0
 242:	80 81       	ld	r24, Z
 244:	48 2f       	mov	r20, r24
 246:	8b 81       	ldd	r24, Y+3	; 0x03
 248:	28 2f       	mov	r18, r24
 24a:	30 e0       	ldi	r19, 0x00	; 0
 24c:	81 e0       	ldi	r24, 0x01	; 1
 24e:	90 e0       	ldi	r25, 0x00	; 0
 250:	02 2e       	mov	r0, r18
 252:	02 c0       	rjmp	.+4      	; 0x258 <DIO_u8setpInDirection+0xbc>
 254:	88 0f       	add	r24, r24
 256:	99 1f       	adc	r25, r25
 258:	0a 94       	dec	r0
 25a:	e2 f7       	brpl	.-8      	; 0x254 <DIO_u8setpInDirection+0xb8>
 25c:	84 2b       	or	r24, r20
 25e:	8c 93       	st	X, r24
 260:	bd c0       	rjmp	.+378    	; 0x3dc <DIO_u8setpInDirection+0x240>
					case DIO_u8_INPUT: CLR_BIT(DIO_u8_DDRA_REG,Copy_u8PinId);break;
 262:	aa e3       	ldi	r26, 0x3A	; 58
 264:	b0 e0       	ldi	r27, 0x00	; 0
 266:	ea e3       	ldi	r30, 0x3A	; 58
 268:	f0 e0       	ldi	r31, 0x00	; 0
 26a:	80 81       	ld	r24, Z
 26c:	48 2f       	mov	r20, r24
 26e:	8b 81       	ldd	r24, Y+3	; 0x03
 270:	28 2f       	mov	r18, r24
 272:	30 e0       	ldi	r19, 0x00	; 0
 274:	81 e0       	ldi	r24, 0x01	; 1
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	02 2e       	mov	r0, r18
 27a:	02 c0       	rjmp	.+4      	; 0x280 <DIO_u8setpInDirection+0xe4>
 27c:	88 0f       	add	r24, r24
 27e:	99 1f       	adc	r25, r25
 280:	0a 94       	dec	r0
 282:	e2 f7       	brpl	.-8      	; 0x27c <DIO_u8setpInDirection+0xe0>
 284:	80 95       	com	r24
 286:	84 23       	and	r24, r20
 288:	8c 93       	st	X, r24
 28a:	a8 c0       	rjmp	.+336    	; 0x3dc <DIO_u8setpInDirection+0x240>
				}
			break;
			case DIO_u8_PORTB:
			    switch (Copy_u8PinDirection)
 28c:	8c 81       	ldd	r24, Y+4	; 0x04
 28e:	28 2f       	mov	r18, r24
 290:	30 e0       	ldi	r19, 0x00	; 0
 292:	3a 87       	std	Y+10, r19	; 0x0a
 294:	29 87       	std	Y+9, r18	; 0x09
 296:	89 85       	ldd	r24, Y+9	; 0x09
 298:	9a 85       	ldd	r25, Y+10	; 0x0a
 29a:	00 97       	sbiw	r24, 0x00	; 0
 29c:	d1 f0       	breq	.+52     	; 0x2d2 <DIO_u8setpInDirection+0x136>
 29e:	29 85       	ldd	r18, Y+9	; 0x09
 2a0:	3a 85       	ldd	r19, Y+10	; 0x0a
 2a2:	21 30       	cpi	r18, 0x01	; 1
 2a4:	31 05       	cpc	r19, r1
 2a6:	09 f0       	breq	.+2      	; 0x2aa <DIO_u8setpInDirection+0x10e>
 2a8:	99 c0       	rjmp	.+306    	; 0x3dc <DIO_u8setpInDirection+0x240>
				{
					case DIO_u8_OUTPUT:SET_BIT(DIO_u8_DDRB_REG,Copy_u8PinId);break;
 2aa:	a7 e3       	ldi	r26, 0x37	; 55
 2ac:	b0 e0       	ldi	r27, 0x00	; 0
 2ae:	e7 e3       	ldi	r30, 0x37	; 55
 2b0:	f0 e0       	ldi	r31, 0x00	; 0
 2b2:	80 81       	ld	r24, Z
 2b4:	48 2f       	mov	r20, r24
 2b6:	8b 81       	ldd	r24, Y+3	; 0x03
 2b8:	28 2f       	mov	r18, r24
 2ba:	30 e0       	ldi	r19, 0x00	; 0
 2bc:	81 e0       	ldi	r24, 0x01	; 1
 2be:	90 e0       	ldi	r25, 0x00	; 0
 2c0:	02 2e       	mov	r0, r18
 2c2:	02 c0       	rjmp	.+4      	; 0x2c8 <DIO_u8setpInDirection+0x12c>
 2c4:	88 0f       	add	r24, r24
 2c6:	99 1f       	adc	r25, r25
 2c8:	0a 94       	dec	r0
 2ca:	e2 f7       	brpl	.-8      	; 0x2c4 <DIO_u8setpInDirection+0x128>
 2cc:	84 2b       	or	r24, r20
 2ce:	8c 93       	st	X, r24
 2d0:	85 c0       	rjmp	.+266    	; 0x3dc <DIO_u8setpInDirection+0x240>
					case DIO_u8_INPUT: CLR_BIT(DIO_u8_DDRB_REG,Copy_u8PinId);break;
 2d2:	a7 e3       	ldi	r26, 0x37	; 55
 2d4:	b0 e0       	ldi	r27, 0x00	; 0
 2d6:	e7 e3       	ldi	r30, 0x37	; 55
 2d8:	f0 e0       	ldi	r31, 0x00	; 0
 2da:	80 81       	ld	r24, Z
 2dc:	48 2f       	mov	r20, r24
 2de:	8b 81       	ldd	r24, Y+3	; 0x03
 2e0:	28 2f       	mov	r18, r24
 2e2:	30 e0       	ldi	r19, 0x00	; 0
 2e4:	81 e0       	ldi	r24, 0x01	; 1
 2e6:	90 e0       	ldi	r25, 0x00	; 0
 2e8:	02 2e       	mov	r0, r18
 2ea:	02 c0       	rjmp	.+4      	; 0x2f0 <DIO_u8setpInDirection+0x154>
 2ec:	88 0f       	add	r24, r24
 2ee:	99 1f       	adc	r25, r25
 2f0:	0a 94       	dec	r0
 2f2:	e2 f7       	brpl	.-8      	; 0x2ec <DIO_u8setpInDirection+0x150>
 2f4:	80 95       	com	r24
 2f6:	84 23       	and	r24, r20
 2f8:	8c 93       	st	X, r24
 2fa:	70 c0       	rjmp	.+224    	; 0x3dc <DIO_u8setpInDirection+0x240>
				}
			break;
			case DIO_u8_PORTC:
			    switch (Copy_u8PinDirection)
 2fc:	8c 81       	ldd	r24, Y+4	; 0x04
 2fe:	28 2f       	mov	r18, r24
 300:	30 e0       	ldi	r19, 0x00	; 0
 302:	38 87       	std	Y+8, r19	; 0x08
 304:	2f 83       	std	Y+7, r18	; 0x07
 306:	8f 81       	ldd	r24, Y+7	; 0x07
 308:	98 85       	ldd	r25, Y+8	; 0x08
 30a:	00 97       	sbiw	r24, 0x00	; 0
 30c:	d1 f0       	breq	.+52     	; 0x342 <DIO_u8setpInDirection+0x1a6>
 30e:	2f 81       	ldd	r18, Y+7	; 0x07
 310:	38 85       	ldd	r19, Y+8	; 0x08
 312:	21 30       	cpi	r18, 0x01	; 1
 314:	31 05       	cpc	r19, r1
 316:	09 f0       	breq	.+2      	; 0x31a <DIO_u8setpInDirection+0x17e>
 318:	61 c0       	rjmp	.+194    	; 0x3dc <DIO_u8setpInDirection+0x240>
				{
					case DIO_u8_OUTPUT:SET_BIT(DIO_u8_DDRC_REG,Copy_u8PinId);break;
 31a:	a4 e3       	ldi	r26, 0x34	; 52
 31c:	b0 e0       	ldi	r27, 0x00	; 0
 31e:	e4 e3       	ldi	r30, 0x34	; 52
 320:	f0 e0       	ldi	r31, 0x00	; 0
 322:	80 81       	ld	r24, Z
 324:	48 2f       	mov	r20, r24
 326:	8b 81       	ldd	r24, Y+3	; 0x03
 328:	28 2f       	mov	r18, r24
 32a:	30 e0       	ldi	r19, 0x00	; 0
 32c:	81 e0       	ldi	r24, 0x01	; 1
 32e:	90 e0       	ldi	r25, 0x00	; 0
 330:	02 2e       	mov	r0, r18
 332:	02 c0       	rjmp	.+4      	; 0x338 <DIO_u8setpInDirection+0x19c>
 334:	88 0f       	add	r24, r24
 336:	99 1f       	adc	r25, r25
 338:	0a 94       	dec	r0
 33a:	e2 f7       	brpl	.-8      	; 0x334 <DIO_u8setpInDirection+0x198>
 33c:	84 2b       	or	r24, r20
 33e:	8c 93       	st	X, r24
 340:	4d c0       	rjmp	.+154    	; 0x3dc <DIO_u8setpInDirection+0x240>
					case DIO_u8_INPUT: CLR_BIT(DIO_u8_DDRC_REG,Copy_u8PinId);break;
 342:	a4 e3       	ldi	r26, 0x34	; 52
 344:	b0 e0       	ldi	r27, 0x00	; 0
 346:	e4 e3       	ldi	r30, 0x34	; 52
 348:	f0 e0       	ldi	r31, 0x00	; 0
 34a:	80 81       	ld	r24, Z
 34c:	48 2f       	mov	r20, r24
 34e:	8b 81       	ldd	r24, Y+3	; 0x03
 350:	28 2f       	mov	r18, r24
 352:	30 e0       	ldi	r19, 0x00	; 0
 354:	81 e0       	ldi	r24, 0x01	; 1
 356:	90 e0       	ldi	r25, 0x00	; 0
 358:	02 2e       	mov	r0, r18
 35a:	02 c0       	rjmp	.+4      	; 0x360 <DIO_u8setpInDirection+0x1c4>
 35c:	88 0f       	add	r24, r24
 35e:	99 1f       	adc	r25, r25
 360:	0a 94       	dec	r0
 362:	e2 f7       	brpl	.-8      	; 0x35c <DIO_u8setpInDirection+0x1c0>
 364:	80 95       	com	r24
 366:	84 23       	and	r24, r20
 368:	8c 93       	st	X, r24
 36a:	38 c0       	rjmp	.+112    	; 0x3dc <DIO_u8setpInDirection+0x240>
				}
			break;
			case DIO_u8_PORTD:
			    switch (Copy_u8PinDirection)
 36c:	8c 81       	ldd	r24, Y+4	; 0x04
 36e:	28 2f       	mov	r18, r24
 370:	30 e0       	ldi	r19, 0x00	; 0
 372:	3e 83       	std	Y+6, r19	; 0x06
 374:	2d 83       	std	Y+5, r18	; 0x05
 376:	8d 81       	ldd	r24, Y+5	; 0x05
 378:	9e 81       	ldd	r25, Y+6	; 0x06
 37a:	00 97       	sbiw	r24, 0x00	; 0
 37c:	c9 f0       	breq	.+50     	; 0x3b0 <DIO_u8setpInDirection+0x214>
 37e:	2d 81       	ldd	r18, Y+5	; 0x05
 380:	3e 81       	ldd	r19, Y+6	; 0x06
 382:	21 30       	cpi	r18, 0x01	; 1
 384:	31 05       	cpc	r19, r1
 386:	51 f5       	brne	.+84     	; 0x3dc <DIO_u8setpInDirection+0x240>
				{
					case DIO_u8_OUTPUT:SET_BIT(DIO_u8_DDRD_REG,Copy_u8PinId);break;
 388:	a1 e3       	ldi	r26, 0x31	; 49
 38a:	b0 e0       	ldi	r27, 0x00	; 0
 38c:	e1 e3       	ldi	r30, 0x31	; 49
 38e:	f0 e0       	ldi	r31, 0x00	; 0
 390:	80 81       	ld	r24, Z
 392:	48 2f       	mov	r20, r24
 394:	8b 81       	ldd	r24, Y+3	; 0x03
 396:	28 2f       	mov	r18, r24
 398:	30 e0       	ldi	r19, 0x00	; 0
 39a:	81 e0       	ldi	r24, 0x01	; 1
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	02 2e       	mov	r0, r18
 3a0:	02 c0       	rjmp	.+4      	; 0x3a6 <DIO_u8setpInDirection+0x20a>
 3a2:	88 0f       	add	r24, r24
 3a4:	99 1f       	adc	r25, r25
 3a6:	0a 94       	dec	r0
 3a8:	e2 f7       	brpl	.-8      	; 0x3a2 <DIO_u8setpInDirection+0x206>
 3aa:	84 2b       	or	r24, r20
 3ac:	8c 93       	st	X, r24
 3ae:	16 c0       	rjmp	.+44     	; 0x3dc <DIO_u8setpInDirection+0x240>
					case DIO_u8_INPUT: CLR_BIT(DIO_u8_DDRD_REG,Copy_u8PinId);break;
 3b0:	a1 e3       	ldi	r26, 0x31	; 49
 3b2:	b0 e0       	ldi	r27, 0x00	; 0
 3b4:	e1 e3       	ldi	r30, 0x31	; 49
 3b6:	f0 e0       	ldi	r31, 0x00	; 0
 3b8:	80 81       	ld	r24, Z
 3ba:	48 2f       	mov	r20, r24
 3bc:	8b 81       	ldd	r24, Y+3	; 0x03
 3be:	28 2f       	mov	r18, r24
 3c0:	30 e0       	ldi	r19, 0x00	; 0
 3c2:	81 e0       	ldi	r24, 0x01	; 1
 3c4:	90 e0       	ldi	r25, 0x00	; 0
 3c6:	02 2e       	mov	r0, r18
 3c8:	02 c0       	rjmp	.+4      	; 0x3ce <DIO_u8setpInDirection+0x232>
 3ca:	88 0f       	add	r24, r24
 3cc:	99 1f       	adc	r25, r25
 3ce:	0a 94       	dec	r0
 3d0:	e2 f7       	brpl	.-8      	; 0x3ca <DIO_u8setpInDirection+0x22e>
 3d2:	80 95       	com	r24
 3d4:	84 23       	and	r24, r20
 3d6:	8c 93       	st	X, r24
 3d8:	01 c0       	rjmp	.+2      	; 0x3dc <DIO_u8setpInDirection+0x240>
		    
		}
	}	
	else
	{
		Local_u8ErrorState = STD_TYPES_NOK;
 3da:	19 82       	std	Y+1, r1	; 0x01
	}
	
	return Local_u8ErrorState;
 3dc:	89 81       	ldd	r24, Y+1	; 0x01
	}
 3de:	2e 96       	adiw	r28, 0x0e	; 14
 3e0:	0f b6       	in	r0, 0x3f	; 63
 3e2:	f8 94       	cli
 3e4:	de bf       	out	0x3e, r29	; 62
 3e6:	0f be       	out	0x3f, r0	; 63
 3e8:	cd bf       	out	0x3d, r28	; 61
 3ea:	cf 91       	pop	r28
 3ec:	df 91       	pop	r29
 3ee:	08 95       	ret

000003f0 <DIO_u8SetPinValue>:

    /*if pin is output set value(0v or 5v)*/
u8 DIO_u8SetPinValue       (u8 Copy_u8PortId, u8 Copy_u8PinId , u8 Copy_u8PinValue){
 3f0:	df 93       	push	r29
 3f2:	cf 93       	push	r28
 3f4:	cd b7       	in	r28, 0x3d	; 61
 3f6:	de b7       	in	r29, 0x3e	; 62
 3f8:	2e 97       	sbiw	r28, 0x0e	; 14
 3fa:	0f b6       	in	r0, 0x3f	; 63
 3fc:	f8 94       	cli
 3fe:	de bf       	out	0x3e, r29	; 62
 400:	0f be       	out	0x3f, r0	; 63
 402:	cd bf       	out	0x3d, r28	; 61
 404:	8a 83       	std	Y+2, r24	; 0x02
 406:	6b 83       	std	Y+3, r22	; 0x03
 408:	4c 83       	std	Y+4, r20	; 0x04
	u8 Local_u8ErrorState = STD_TYPES_OK;
 40a:	81 e0       	ldi	r24, 0x01	; 1
 40c:	89 83       	std	Y+1, r24	; 0x01
	if((Copy_u8PortId <= DIO_u8_PORTD) && (Copy_u8PinId <= DIO_u8_PIN7) && ((Copy_u8PinValue == DIO_u8_HIGH)||(Copy_u8PinValue == DIO_u8_LOW)))
 40e:	8a 81       	ldd	r24, Y+2	; 0x02
 410:	84 30       	cpi	r24, 0x04	; 4
 412:	08 f0       	brcs	.+2      	; 0x416 <DIO_u8SetPinValue+0x26>
 414:	0c c1       	rjmp	.+536    	; 0x62e <DIO_u8SetPinValue+0x23e>
 416:	8b 81       	ldd	r24, Y+3	; 0x03
 418:	88 30       	cpi	r24, 0x08	; 8
 41a:	08 f0       	brcs	.+2      	; 0x41e <DIO_u8SetPinValue+0x2e>
 41c:	08 c1       	rjmp	.+528    	; 0x62e <DIO_u8SetPinValue+0x23e>
 41e:	8c 81       	ldd	r24, Y+4	; 0x04
 420:	81 30       	cpi	r24, 0x01	; 1
 422:	21 f0       	breq	.+8      	; 0x42c <DIO_u8SetPinValue+0x3c>
 424:	8c 81       	ldd	r24, Y+4	; 0x04
 426:	88 23       	and	r24, r24
 428:	09 f0       	breq	.+2      	; 0x42c <DIO_u8SetPinValue+0x3c>
 42a:	01 c1       	rjmp	.+514    	; 0x62e <DIO_u8SetPinValue+0x23e>
	{
		switch(Copy_u8PortId)
 42c:	8a 81       	ldd	r24, Y+2	; 0x02
 42e:	28 2f       	mov	r18, r24
 430:	30 e0       	ldi	r19, 0x00	; 0
 432:	3e 87       	std	Y+14, r19	; 0x0e
 434:	2d 87       	std	Y+13, r18	; 0x0d
 436:	8d 85       	ldd	r24, Y+13	; 0x0d
 438:	9e 85       	ldd	r25, Y+14	; 0x0e
 43a:	81 30       	cpi	r24, 0x01	; 1
 43c:	91 05       	cpc	r25, r1
 43e:	09 f4       	brne	.+2      	; 0x442 <DIO_u8SetPinValue+0x52>
 440:	4f c0       	rjmp	.+158    	; 0x4e0 <DIO_u8SetPinValue+0xf0>
 442:	2d 85       	ldd	r18, Y+13	; 0x0d
 444:	3e 85       	ldd	r19, Y+14	; 0x0e
 446:	22 30       	cpi	r18, 0x02	; 2
 448:	31 05       	cpc	r19, r1
 44a:	2c f4       	brge	.+10     	; 0x456 <DIO_u8SetPinValue+0x66>
 44c:	8d 85       	ldd	r24, Y+13	; 0x0d
 44e:	9e 85       	ldd	r25, Y+14	; 0x0e
 450:	00 97       	sbiw	r24, 0x00	; 0
 452:	71 f0       	breq	.+28     	; 0x470 <DIO_u8SetPinValue+0x80>
 454:	ed c0       	rjmp	.+474    	; 0x630 <DIO_u8SetPinValue+0x240>
 456:	2d 85       	ldd	r18, Y+13	; 0x0d
 458:	3e 85       	ldd	r19, Y+14	; 0x0e
 45a:	22 30       	cpi	r18, 0x02	; 2
 45c:	31 05       	cpc	r19, r1
 45e:	09 f4       	brne	.+2      	; 0x462 <DIO_u8SetPinValue+0x72>
 460:	77 c0       	rjmp	.+238    	; 0x550 <DIO_u8SetPinValue+0x160>
 462:	8d 85       	ldd	r24, Y+13	; 0x0d
 464:	9e 85       	ldd	r25, Y+14	; 0x0e
 466:	83 30       	cpi	r24, 0x03	; 3
 468:	91 05       	cpc	r25, r1
 46a:	09 f4       	brne	.+2      	; 0x46e <DIO_u8SetPinValue+0x7e>
 46c:	a9 c0       	rjmp	.+338    	; 0x5c0 <DIO_u8SetPinValue+0x1d0>
 46e:	e0 c0       	rjmp	.+448    	; 0x630 <DIO_u8SetPinValue+0x240>
		{
			case DIO_u8_PORTA:
			    switch(Copy_u8PinValue)
 470:	8c 81       	ldd	r24, Y+4	; 0x04
 472:	28 2f       	mov	r18, r24
 474:	30 e0       	ldi	r19, 0x00	; 0
 476:	3c 87       	std	Y+12, r19	; 0x0c
 478:	2b 87       	std	Y+11, r18	; 0x0b
 47a:	8b 85       	ldd	r24, Y+11	; 0x0b
 47c:	9c 85       	ldd	r25, Y+12	; 0x0c
 47e:	00 97       	sbiw	r24, 0x00	; 0
 480:	d1 f0       	breq	.+52     	; 0x4b6 <DIO_u8SetPinValue+0xc6>
 482:	2b 85       	ldd	r18, Y+11	; 0x0b
 484:	3c 85       	ldd	r19, Y+12	; 0x0c
 486:	21 30       	cpi	r18, 0x01	; 1
 488:	31 05       	cpc	r19, r1
 48a:	09 f0       	breq	.+2      	; 0x48e <DIO_u8SetPinValue+0x9e>
 48c:	d1 c0       	rjmp	.+418    	; 0x630 <DIO_u8SetPinValue+0x240>
				{
					case DIO_u8_HIGH:SET_BIT(DIO_u8_PORTA_REG,Copy_u8PinId);break;
 48e:	ab e3       	ldi	r26, 0x3B	; 59
 490:	b0 e0       	ldi	r27, 0x00	; 0
 492:	eb e3       	ldi	r30, 0x3B	; 59
 494:	f0 e0       	ldi	r31, 0x00	; 0
 496:	80 81       	ld	r24, Z
 498:	48 2f       	mov	r20, r24
 49a:	8b 81       	ldd	r24, Y+3	; 0x03
 49c:	28 2f       	mov	r18, r24
 49e:	30 e0       	ldi	r19, 0x00	; 0
 4a0:	81 e0       	ldi	r24, 0x01	; 1
 4a2:	90 e0       	ldi	r25, 0x00	; 0
 4a4:	02 2e       	mov	r0, r18
 4a6:	02 c0       	rjmp	.+4      	; 0x4ac <DIO_u8SetPinValue+0xbc>
 4a8:	88 0f       	add	r24, r24
 4aa:	99 1f       	adc	r25, r25
 4ac:	0a 94       	dec	r0
 4ae:	e2 f7       	brpl	.-8      	; 0x4a8 <DIO_u8SetPinValue+0xb8>
 4b0:	84 2b       	or	r24, r20
 4b2:	8c 93       	st	X, r24
 4b4:	bd c0       	rjmp	.+378    	; 0x630 <DIO_u8SetPinValue+0x240>
					case DIO_u8_LOW: CLR_BIT(DIO_u8_PORTA_REG,Copy_u8PinId);break;
 4b6:	ab e3       	ldi	r26, 0x3B	; 59
 4b8:	b0 e0       	ldi	r27, 0x00	; 0
 4ba:	eb e3       	ldi	r30, 0x3B	; 59
 4bc:	f0 e0       	ldi	r31, 0x00	; 0
 4be:	80 81       	ld	r24, Z
 4c0:	48 2f       	mov	r20, r24
 4c2:	8b 81       	ldd	r24, Y+3	; 0x03
 4c4:	28 2f       	mov	r18, r24
 4c6:	30 e0       	ldi	r19, 0x00	; 0
 4c8:	81 e0       	ldi	r24, 0x01	; 1
 4ca:	90 e0       	ldi	r25, 0x00	; 0
 4cc:	02 2e       	mov	r0, r18
 4ce:	02 c0       	rjmp	.+4      	; 0x4d4 <DIO_u8SetPinValue+0xe4>
 4d0:	88 0f       	add	r24, r24
 4d2:	99 1f       	adc	r25, r25
 4d4:	0a 94       	dec	r0
 4d6:	e2 f7       	brpl	.-8      	; 0x4d0 <DIO_u8SetPinValue+0xe0>
 4d8:	80 95       	com	r24
 4da:	84 23       	and	r24, r20
 4dc:	8c 93       	st	X, r24
 4de:	a8 c0       	rjmp	.+336    	; 0x630 <DIO_u8SetPinValue+0x240>
				}
			break;
			case DIO_u8_PORTB:
			    switch(Copy_u8PinValue)
 4e0:	8c 81       	ldd	r24, Y+4	; 0x04
 4e2:	28 2f       	mov	r18, r24
 4e4:	30 e0       	ldi	r19, 0x00	; 0
 4e6:	3a 87       	std	Y+10, r19	; 0x0a
 4e8:	29 87       	std	Y+9, r18	; 0x09
 4ea:	89 85       	ldd	r24, Y+9	; 0x09
 4ec:	9a 85       	ldd	r25, Y+10	; 0x0a
 4ee:	00 97       	sbiw	r24, 0x00	; 0
 4f0:	d1 f0       	breq	.+52     	; 0x526 <DIO_u8SetPinValue+0x136>
 4f2:	29 85       	ldd	r18, Y+9	; 0x09
 4f4:	3a 85       	ldd	r19, Y+10	; 0x0a
 4f6:	21 30       	cpi	r18, 0x01	; 1
 4f8:	31 05       	cpc	r19, r1
 4fa:	09 f0       	breq	.+2      	; 0x4fe <DIO_u8SetPinValue+0x10e>
 4fc:	99 c0       	rjmp	.+306    	; 0x630 <DIO_u8SetPinValue+0x240>
				{
					case DIO_u8_HIGH:SET_BIT(DIO_u8_PORTB_REG,Copy_u8PinId);break;
 4fe:	a8 e3       	ldi	r26, 0x38	; 56
 500:	b0 e0       	ldi	r27, 0x00	; 0
 502:	e8 e3       	ldi	r30, 0x38	; 56
 504:	f0 e0       	ldi	r31, 0x00	; 0
 506:	80 81       	ld	r24, Z
 508:	48 2f       	mov	r20, r24
 50a:	8b 81       	ldd	r24, Y+3	; 0x03
 50c:	28 2f       	mov	r18, r24
 50e:	30 e0       	ldi	r19, 0x00	; 0
 510:	81 e0       	ldi	r24, 0x01	; 1
 512:	90 e0       	ldi	r25, 0x00	; 0
 514:	02 2e       	mov	r0, r18
 516:	02 c0       	rjmp	.+4      	; 0x51c <DIO_u8SetPinValue+0x12c>
 518:	88 0f       	add	r24, r24
 51a:	99 1f       	adc	r25, r25
 51c:	0a 94       	dec	r0
 51e:	e2 f7       	brpl	.-8      	; 0x518 <DIO_u8SetPinValue+0x128>
 520:	84 2b       	or	r24, r20
 522:	8c 93       	st	X, r24
 524:	85 c0       	rjmp	.+266    	; 0x630 <DIO_u8SetPinValue+0x240>
					case DIO_u8_LOW:CLR_BIT(DIO_u8_PORTB_REG,Copy_u8PinId);break;
 526:	a8 e3       	ldi	r26, 0x38	; 56
 528:	b0 e0       	ldi	r27, 0x00	; 0
 52a:	e8 e3       	ldi	r30, 0x38	; 56
 52c:	f0 e0       	ldi	r31, 0x00	; 0
 52e:	80 81       	ld	r24, Z
 530:	48 2f       	mov	r20, r24
 532:	8b 81       	ldd	r24, Y+3	; 0x03
 534:	28 2f       	mov	r18, r24
 536:	30 e0       	ldi	r19, 0x00	; 0
 538:	81 e0       	ldi	r24, 0x01	; 1
 53a:	90 e0       	ldi	r25, 0x00	; 0
 53c:	02 2e       	mov	r0, r18
 53e:	02 c0       	rjmp	.+4      	; 0x544 <DIO_u8SetPinValue+0x154>
 540:	88 0f       	add	r24, r24
 542:	99 1f       	adc	r25, r25
 544:	0a 94       	dec	r0
 546:	e2 f7       	brpl	.-8      	; 0x540 <DIO_u8SetPinValue+0x150>
 548:	80 95       	com	r24
 54a:	84 23       	and	r24, r20
 54c:	8c 93       	st	X, r24
 54e:	70 c0       	rjmp	.+224    	; 0x630 <DIO_u8SetPinValue+0x240>
				}
			break;
			case DIO_u8_PORTC:
			    switch(Copy_u8PinValue)
 550:	8c 81       	ldd	r24, Y+4	; 0x04
 552:	28 2f       	mov	r18, r24
 554:	30 e0       	ldi	r19, 0x00	; 0
 556:	38 87       	std	Y+8, r19	; 0x08
 558:	2f 83       	std	Y+7, r18	; 0x07
 55a:	8f 81       	ldd	r24, Y+7	; 0x07
 55c:	98 85       	ldd	r25, Y+8	; 0x08
 55e:	00 97       	sbiw	r24, 0x00	; 0
 560:	d1 f0       	breq	.+52     	; 0x596 <DIO_u8SetPinValue+0x1a6>
 562:	2f 81       	ldd	r18, Y+7	; 0x07
 564:	38 85       	ldd	r19, Y+8	; 0x08
 566:	21 30       	cpi	r18, 0x01	; 1
 568:	31 05       	cpc	r19, r1
 56a:	09 f0       	breq	.+2      	; 0x56e <DIO_u8SetPinValue+0x17e>
 56c:	61 c0       	rjmp	.+194    	; 0x630 <DIO_u8SetPinValue+0x240>
				{
					case DIO_u8_HIGH:SET_BIT(DIO_u8_PORTC_REG,Copy_u8PinId);break;
 56e:	a5 e3       	ldi	r26, 0x35	; 53
 570:	b0 e0       	ldi	r27, 0x00	; 0
 572:	e5 e3       	ldi	r30, 0x35	; 53
 574:	f0 e0       	ldi	r31, 0x00	; 0
 576:	80 81       	ld	r24, Z
 578:	48 2f       	mov	r20, r24
 57a:	8b 81       	ldd	r24, Y+3	; 0x03
 57c:	28 2f       	mov	r18, r24
 57e:	30 e0       	ldi	r19, 0x00	; 0
 580:	81 e0       	ldi	r24, 0x01	; 1
 582:	90 e0       	ldi	r25, 0x00	; 0
 584:	02 2e       	mov	r0, r18
 586:	02 c0       	rjmp	.+4      	; 0x58c <DIO_u8SetPinValue+0x19c>
 588:	88 0f       	add	r24, r24
 58a:	99 1f       	adc	r25, r25
 58c:	0a 94       	dec	r0
 58e:	e2 f7       	brpl	.-8      	; 0x588 <DIO_u8SetPinValue+0x198>
 590:	84 2b       	or	r24, r20
 592:	8c 93       	st	X, r24
 594:	4d c0       	rjmp	.+154    	; 0x630 <DIO_u8SetPinValue+0x240>
					case DIO_u8_LOW:CLR_BIT(DIO_u8_PORTC_REG,Copy_u8PinId);break;
 596:	a5 e3       	ldi	r26, 0x35	; 53
 598:	b0 e0       	ldi	r27, 0x00	; 0
 59a:	e5 e3       	ldi	r30, 0x35	; 53
 59c:	f0 e0       	ldi	r31, 0x00	; 0
 59e:	80 81       	ld	r24, Z
 5a0:	48 2f       	mov	r20, r24
 5a2:	8b 81       	ldd	r24, Y+3	; 0x03
 5a4:	28 2f       	mov	r18, r24
 5a6:	30 e0       	ldi	r19, 0x00	; 0
 5a8:	81 e0       	ldi	r24, 0x01	; 1
 5aa:	90 e0       	ldi	r25, 0x00	; 0
 5ac:	02 2e       	mov	r0, r18
 5ae:	02 c0       	rjmp	.+4      	; 0x5b4 <DIO_u8SetPinValue+0x1c4>
 5b0:	88 0f       	add	r24, r24
 5b2:	99 1f       	adc	r25, r25
 5b4:	0a 94       	dec	r0
 5b6:	e2 f7       	brpl	.-8      	; 0x5b0 <DIO_u8SetPinValue+0x1c0>
 5b8:	80 95       	com	r24
 5ba:	84 23       	and	r24, r20
 5bc:	8c 93       	st	X, r24
 5be:	38 c0       	rjmp	.+112    	; 0x630 <DIO_u8SetPinValue+0x240>
				}
			break;
			case DIO_u8_PORTD:
			    switch(Copy_u8PinValue)
 5c0:	8c 81       	ldd	r24, Y+4	; 0x04
 5c2:	28 2f       	mov	r18, r24
 5c4:	30 e0       	ldi	r19, 0x00	; 0
 5c6:	3e 83       	std	Y+6, r19	; 0x06
 5c8:	2d 83       	std	Y+5, r18	; 0x05
 5ca:	8d 81       	ldd	r24, Y+5	; 0x05
 5cc:	9e 81       	ldd	r25, Y+6	; 0x06
 5ce:	00 97       	sbiw	r24, 0x00	; 0
 5d0:	c9 f0       	breq	.+50     	; 0x604 <DIO_u8SetPinValue+0x214>
 5d2:	2d 81       	ldd	r18, Y+5	; 0x05
 5d4:	3e 81       	ldd	r19, Y+6	; 0x06
 5d6:	21 30       	cpi	r18, 0x01	; 1
 5d8:	31 05       	cpc	r19, r1
 5da:	51 f5       	brne	.+84     	; 0x630 <DIO_u8SetPinValue+0x240>
				{
					case DIO_u8_HIGH:SET_BIT(DIO_u8_PORTD_REG,Copy_u8PinId);break;
 5dc:	a2 e3       	ldi	r26, 0x32	; 50
 5de:	b0 e0       	ldi	r27, 0x00	; 0
 5e0:	e2 e3       	ldi	r30, 0x32	; 50
 5e2:	f0 e0       	ldi	r31, 0x00	; 0
 5e4:	80 81       	ld	r24, Z
 5e6:	48 2f       	mov	r20, r24
 5e8:	8b 81       	ldd	r24, Y+3	; 0x03
 5ea:	28 2f       	mov	r18, r24
 5ec:	30 e0       	ldi	r19, 0x00	; 0
 5ee:	81 e0       	ldi	r24, 0x01	; 1
 5f0:	90 e0       	ldi	r25, 0x00	; 0
 5f2:	02 2e       	mov	r0, r18
 5f4:	02 c0       	rjmp	.+4      	; 0x5fa <DIO_u8SetPinValue+0x20a>
 5f6:	88 0f       	add	r24, r24
 5f8:	99 1f       	adc	r25, r25
 5fa:	0a 94       	dec	r0
 5fc:	e2 f7       	brpl	.-8      	; 0x5f6 <DIO_u8SetPinValue+0x206>
 5fe:	84 2b       	or	r24, r20
 600:	8c 93       	st	X, r24
 602:	16 c0       	rjmp	.+44     	; 0x630 <DIO_u8SetPinValue+0x240>
					case DIO_u8_LOW:CLR_BIT(DIO_u8_PORTD_REG,Copy_u8PinId);break;
 604:	a2 e3       	ldi	r26, 0x32	; 50
 606:	b0 e0       	ldi	r27, 0x00	; 0
 608:	e2 e3       	ldi	r30, 0x32	; 50
 60a:	f0 e0       	ldi	r31, 0x00	; 0
 60c:	80 81       	ld	r24, Z
 60e:	48 2f       	mov	r20, r24
 610:	8b 81       	ldd	r24, Y+3	; 0x03
 612:	28 2f       	mov	r18, r24
 614:	30 e0       	ldi	r19, 0x00	; 0
 616:	81 e0       	ldi	r24, 0x01	; 1
 618:	90 e0       	ldi	r25, 0x00	; 0
 61a:	02 2e       	mov	r0, r18
 61c:	02 c0       	rjmp	.+4      	; 0x622 <DIO_u8SetPinValue+0x232>
 61e:	88 0f       	add	r24, r24
 620:	99 1f       	adc	r25, r25
 622:	0a 94       	dec	r0
 624:	e2 f7       	brpl	.-8      	; 0x61e <DIO_u8SetPinValue+0x22e>
 626:	80 95       	com	r24
 628:	84 23       	and	r24, r20
 62a:	8c 93       	st	X, r24
 62c:	01 c0       	rjmp	.+2      	; 0x630 <DIO_u8SetPinValue+0x240>
			
		}
	}
	else
	{
		Local_u8ErrorState = STD_TYPES_NOK;
 62e:	19 82       	std	Y+1, r1	; 0x01
	}

	return Local_u8ErrorState;
 630:	89 81       	ldd	r24, Y+1	; 0x01
} 
 632:	2e 96       	adiw	r28, 0x0e	; 14
 634:	0f b6       	in	r0, 0x3f	; 63
 636:	f8 94       	cli
 638:	de bf       	out	0x3e, r29	; 62
 63a:	0f be       	out	0x3f, r0	; 63
 63c:	cd bf       	out	0x3d, r28	; 61
 63e:	cf 91       	pop	r28
 640:	df 91       	pop	r29
 642:	08 95       	ret

00000644 <DIO_u8GetPinValue>:

   /*if pin is input read value(0v or 5v)*/
u8 DIO_u8GetPinValue (u8 Copy_u8PortId, u8 Copy_u8PinId , u8 * Copy_pu8ReturnedPinValue){
 644:	df 93       	push	r29
 646:	cf 93       	push	r28
 648:	cd b7       	in	r28, 0x3d	; 61
 64a:	de b7       	in	r29, 0x3e	; 62
 64c:	28 97       	sbiw	r28, 0x08	; 8
 64e:	0f b6       	in	r0, 0x3f	; 63
 650:	f8 94       	cli
 652:	de bf       	out	0x3e, r29	; 62
 654:	0f be       	out	0x3f, r0	; 63
 656:	cd bf       	out	0x3d, r28	; 61
 658:	8b 83       	std	Y+3, r24	; 0x03
 65a:	6c 83       	std	Y+4, r22	; 0x04
 65c:	5e 83       	std	Y+6, r21	; 0x06
 65e:	4d 83       	std	Y+5, r20	; 0x05
	u8 Local_u8ErrorState = STD_TYPES_OK;
 660:	81 e0       	ldi	r24, 0x01	; 1
 662:	8a 83       	std	Y+2, r24	; 0x02
	u8 Local_u8PinValue;
	if((Copy_u8PortId <= DIO_u8_PORTD)&& (Copy_u8PinId <= DIO_u8_PIN7)&& (Copy_pu8ReturnedPinValue != NULL))
 664:	8b 81       	ldd	r24, Y+3	; 0x03
 666:	84 30       	cpi	r24, 0x04	; 4
 668:	08 f0       	brcs	.+2      	; 0x66c <DIO_u8GetPinValue+0x28>
 66a:	9f c0       	rjmp	.+318    	; 0x7aa <DIO_u8GetPinValue+0x166>
 66c:	8c 81       	ldd	r24, Y+4	; 0x04
 66e:	88 30       	cpi	r24, 0x08	; 8
 670:	08 f0       	brcs	.+2      	; 0x674 <DIO_u8GetPinValue+0x30>
 672:	9b c0       	rjmp	.+310    	; 0x7aa <DIO_u8GetPinValue+0x166>
 674:	8d 81       	ldd	r24, Y+5	; 0x05
 676:	9e 81       	ldd	r25, Y+6	; 0x06
 678:	00 97       	sbiw	r24, 0x00	; 0
 67a:	09 f4       	brne	.+2      	; 0x67e <DIO_u8GetPinValue+0x3a>
 67c:	96 c0       	rjmp	.+300    	; 0x7aa <DIO_u8GetPinValue+0x166>
	{
		switch(Copy_u8PortId)
 67e:	8b 81       	ldd	r24, Y+3	; 0x03
 680:	28 2f       	mov	r18, r24
 682:	30 e0       	ldi	r19, 0x00	; 0
 684:	38 87       	std	Y+8, r19	; 0x08
 686:	2f 83       	std	Y+7, r18	; 0x07
 688:	4f 81       	ldd	r20, Y+7	; 0x07
 68a:	58 85       	ldd	r21, Y+8	; 0x08
 68c:	41 30       	cpi	r20, 0x01	; 1
 68e:	51 05       	cpc	r21, r1
 690:	a9 f1       	breq	.+106    	; 0x6fc <DIO_u8GetPinValue+0xb8>
 692:	8f 81       	ldd	r24, Y+7	; 0x07
 694:	98 85       	ldd	r25, Y+8	; 0x08
 696:	82 30       	cpi	r24, 0x02	; 2
 698:	91 05       	cpc	r25, r1
 69a:	34 f4       	brge	.+12     	; 0x6a8 <DIO_u8GetPinValue+0x64>
 69c:	2f 81       	ldd	r18, Y+7	; 0x07
 69e:	38 85       	ldd	r19, Y+8	; 0x08
 6a0:	21 15       	cp	r18, r1
 6a2:	31 05       	cpc	r19, r1
 6a4:	71 f0       	breq	.+28     	; 0x6c2 <DIO_u8GetPinValue+0x7e>
 6a6:	82 c0       	rjmp	.+260    	; 0x7ac <DIO_u8GetPinValue+0x168>
 6a8:	4f 81       	ldd	r20, Y+7	; 0x07
 6aa:	58 85       	ldd	r21, Y+8	; 0x08
 6ac:	42 30       	cpi	r20, 0x02	; 2
 6ae:	51 05       	cpc	r21, r1
 6b0:	09 f4       	brne	.+2      	; 0x6b4 <DIO_u8GetPinValue+0x70>
 6b2:	41 c0       	rjmp	.+130    	; 0x736 <DIO_u8GetPinValue+0xf2>
 6b4:	8f 81       	ldd	r24, Y+7	; 0x07
 6b6:	98 85       	ldd	r25, Y+8	; 0x08
 6b8:	83 30       	cpi	r24, 0x03	; 3
 6ba:	91 05       	cpc	r25, r1
 6bc:	09 f4       	brne	.+2      	; 0x6c0 <DIO_u8GetPinValue+0x7c>
 6be:	58 c0       	rjmp	.+176    	; 0x770 <DIO_u8GetPinValue+0x12c>
 6c0:	75 c0       	rjmp	.+234    	; 0x7ac <DIO_u8GetPinValue+0x168>
		{
			case DIO_u8_PORTA:
			Local_u8PinValue = GET_BIT(DIO_u8_PINA_REG,Copy_u8PinId);
 6c2:	e9 e3       	ldi	r30, 0x39	; 57
 6c4:	f0 e0       	ldi	r31, 0x00	; 0
 6c6:	80 81       	ld	r24, Z
 6c8:	28 2f       	mov	r18, r24
 6ca:	30 e0       	ldi	r19, 0x00	; 0
 6cc:	8c 81       	ldd	r24, Y+4	; 0x04
 6ce:	88 2f       	mov	r24, r24
 6d0:	90 e0       	ldi	r25, 0x00	; 0
 6d2:	a9 01       	movw	r20, r18
 6d4:	02 c0       	rjmp	.+4      	; 0x6da <DIO_u8GetPinValue+0x96>
 6d6:	55 95       	asr	r21
 6d8:	47 95       	ror	r20
 6da:	8a 95       	dec	r24
 6dc:	e2 f7       	brpl	.-8      	; 0x6d6 <DIO_u8GetPinValue+0x92>
 6de:	ca 01       	movw	r24, r20
 6e0:	81 70       	andi	r24, 0x01	; 1
 6e2:	89 83       	std	Y+1, r24	; 0x01
			if(Local_u8PinValue == 0)
 6e4:	89 81       	ldd	r24, Y+1	; 0x01
 6e6:	88 23       	and	r24, r24
 6e8:	21 f4       	brne	.+8      	; 0x6f2 <DIO_u8GetPinValue+0xae>
			{
				*Copy_pu8ReturnedPinValue = DIO_u8_LOW;
 6ea:	ed 81       	ldd	r30, Y+5	; 0x05
 6ec:	fe 81       	ldd	r31, Y+6	; 0x06
 6ee:	10 82       	st	Z, r1
 6f0:	5d c0       	rjmp	.+186    	; 0x7ac <DIO_u8GetPinValue+0x168>
			}
			else
			{
				*Copy_pu8ReturnedPinValue = DIO_u8_HIGH;	
 6f2:	ed 81       	ldd	r30, Y+5	; 0x05
 6f4:	fe 81       	ldd	r31, Y+6	; 0x06
 6f6:	81 e0       	ldi	r24, 0x01	; 1
 6f8:	80 83       	st	Z, r24
 6fa:	58 c0       	rjmp	.+176    	; 0x7ac <DIO_u8GetPinValue+0x168>
			}
		    break;
            case DIO_u8_PORTB:
			Local_u8PinValue = GET_BIT(DIO_u8_PINB_REG,Copy_u8PinId);
 6fc:	e6 e3       	ldi	r30, 0x36	; 54
 6fe:	f0 e0       	ldi	r31, 0x00	; 0
 700:	80 81       	ld	r24, Z
 702:	28 2f       	mov	r18, r24
 704:	30 e0       	ldi	r19, 0x00	; 0
 706:	8c 81       	ldd	r24, Y+4	; 0x04
 708:	88 2f       	mov	r24, r24
 70a:	90 e0       	ldi	r25, 0x00	; 0
 70c:	a9 01       	movw	r20, r18
 70e:	02 c0       	rjmp	.+4      	; 0x714 <DIO_u8GetPinValue+0xd0>
 710:	55 95       	asr	r21
 712:	47 95       	ror	r20
 714:	8a 95       	dec	r24
 716:	e2 f7       	brpl	.-8      	; 0x710 <DIO_u8GetPinValue+0xcc>
 718:	ca 01       	movw	r24, r20
 71a:	81 70       	andi	r24, 0x01	; 1
 71c:	89 83       	std	Y+1, r24	; 0x01
			if(Local_u8PinValue == 0)
 71e:	89 81       	ldd	r24, Y+1	; 0x01
 720:	88 23       	and	r24, r24
 722:	21 f4       	brne	.+8      	; 0x72c <DIO_u8GetPinValue+0xe8>
			{
				*Copy_pu8ReturnedPinValue = DIO_u8_LOW;
 724:	ed 81       	ldd	r30, Y+5	; 0x05
 726:	fe 81       	ldd	r31, Y+6	; 0x06
 728:	10 82       	st	Z, r1
 72a:	40 c0       	rjmp	.+128    	; 0x7ac <DIO_u8GetPinValue+0x168>
			}
			else
			{
				*Copy_pu8ReturnedPinValue = DIO_u8_HIGH;	
 72c:	ed 81       	ldd	r30, Y+5	; 0x05
 72e:	fe 81       	ldd	r31, Y+6	; 0x06
 730:	81 e0       	ldi	r24, 0x01	; 1
 732:	80 83       	st	Z, r24
 734:	3b c0       	rjmp	.+118    	; 0x7ac <DIO_u8GetPinValue+0x168>
			}
		    break;
			case DIO_u8_PORTC:
			Local_u8PinValue = GET_BIT(DIO_u8_PINC_REG,Copy_u8PinId);
 736:	e3 e3       	ldi	r30, 0x33	; 51
 738:	f0 e0       	ldi	r31, 0x00	; 0
 73a:	80 81       	ld	r24, Z
 73c:	28 2f       	mov	r18, r24
 73e:	30 e0       	ldi	r19, 0x00	; 0
 740:	8c 81       	ldd	r24, Y+4	; 0x04
 742:	88 2f       	mov	r24, r24
 744:	90 e0       	ldi	r25, 0x00	; 0
 746:	a9 01       	movw	r20, r18
 748:	02 c0       	rjmp	.+4      	; 0x74e <DIO_u8GetPinValue+0x10a>
 74a:	55 95       	asr	r21
 74c:	47 95       	ror	r20
 74e:	8a 95       	dec	r24
 750:	e2 f7       	brpl	.-8      	; 0x74a <DIO_u8GetPinValue+0x106>
 752:	ca 01       	movw	r24, r20
 754:	81 70       	andi	r24, 0x01	; 1
 756:	89 83       	std	Y+1, r24	; 0x01
			if(Local_u8PinValue == 0)
 758:	89 81       	ldd	r24, Y+1	; 0x01
 75a:	88 23       	and	r24, r24
 75c:	21 f4       	brne	.+8      	; 0x766 <DIO_u8GetPinValue+0x122>
			{
				*Copy_pu8ReturnedPinValue = DIO_u8_LOW;
 75e:	ed 81       	ldd	r30, Y+5	; 0x05
 760:	fe 81       	ldd	r31, Y+6	; 0x06
 762:	10 82       	st	Z, r1
 764:	23 c0       	rjmp	.+70     	; 0x7ac <DIO_u8GetPinValue+0x168>
			}
			else
			{
				*Copy_pu8ReturnedPinValue = DIO_u8_HIGH;	
 766:	ed 81       	ldd	r30, Y+5	; 0x05
 768:	fe 81       	ldd	r31, Y+6	; 0x06
 76a:	81 e0       	ldi	r24, 0x01	; 1
 76c:	80 83       	st	Z, r24
 76e:	1e c0       	rjmp	.+60     	; 0x7ac <DIO_u8GetPinValue+0x168>
			}
		    break;
			case DIO_u8_PORTD:
			Local_u8PinValue = GET_BIT(DIO_u8_PIND_REG,Copy_u8PinId);
 770:	e0 e3       	ldi	r30, 0x30	; 48
 772:	f0 e0       	ldi	r31, 0x00	; 0
 774:	80 81       	ld	r24, Z
 776:	28 2f       	mov	r18, r24
 778:	30 e0       	ldi	r19, 0x00	; 0
 77a:	8c 81       	ldd	r24, Y+4	; 0x04
 77c:	88 2f       	mov	r24, r24
 77e:	90 e0       	ldi	r25, 0x00	; 0
 780:	a9 01       	movw	r20, r18
 782:	02 c0       	rjmp	.+4      	; 0x788 <DIO_u8GetPinValue+0x144>
 784:	55 95       	asr	r21
 786:	47 95       	ror	r20
 788:	8a 95       	dec	r24
 78a:	e2 f7       	brpl	.-8      	; 0x784 <DIO_u8GetPinValue+0x140>
 78c:	ca 01       	movw	r24, r20
 78e:	81 70       	andi	r24, 0x01	; 1
 790:	89 83       	std	Y+1, r24	; 0x01
			if(Local_u8PinValue == 0)
 792:	89 81       	ldd	r24, Y+1	; 0x01
 794:	88 23       	and	r24, r24
 796:	21 f4       	brne	.+8      	; 0x7a0 <DIO_u8GetPinValue+0x15c>
			{
				*Copy_pu8ReturnedPinValue = DIO_u8_LOW;
 798:	ed 81       	ldd	r30, Y+5	; 0x05
 79a:	fe 81       	ldd	r31, Y+6	; 0x06
 79c:	10 82       	st	Z, r1
 79e:	06 c0       	rjmp	.+12     	; 0x7ac <DIO_u8GetPinValue+0x168>
			}
			else
			{
				*Copy_pu8ReturnedPinValue = DIO_u8_HIGH;	
 7a0:	ed 81       	ldd	r30, Y+5	; 0x05
 7a2:	fe 81       	ldd	r31, Y+6	; 0x06
 7a4:	81 e0       	ldi	r24, 0x01	; 1
 7a6:	80 83       	st	Z, r24
 7a8:	01 c0       	rjmp	.+2      	; 0x7ac <DIO_u8GetPinValue+0x168>
		    break;
		}	
	}
	else
	{
		Local_u8ErrorState = STD_TYPES_NOK;
 7aa:	1a 82       	std	Y+2, r1	; 0x02
	}
	return Local_u8ErrorState;
 7ac:	8a 81       	ldd	r24, Y+2	; 0x02
}
 7ae:	28 96       	adiw	r28, 0x08	; 8
 7b0:	0f b6       	in	r0, 0x3f	; 63
 7b2:	f8 94       	cli
 7b4:	de bf       	out	0x3e, r29	; 62
 7b6:	0f be       	out	0x3f, r0	; 63
 7b8:	cd bf       	out	0x3d, r28	; 61
 7ba:	cf 91       	pop	r28
 7bc:	df 91       	pop	r29
 7be:	08 95       	ret

000007c0 <DIO_u8SetPortDirection>:
   /*port direction input or output*/
u8 DIO_u8SetPortDirection (u8 Copy_u8PortId, u8 Copy_u8PortDirection){
 7c0:	df 93       	push	r29
 7c2:	cf 93       	push	r28
 7c4:	cd b7       	in	r28, 0x3d	; 61
 7c6:	de b7       	in	r29, 0x3e	; 62
 7c8:	2d 97       	sbiw	r28, 0x0d	; 13
 7ca:	0f b6       	in	r0, 0x3f	; 63
 7cc:	f8 94       	cli
 7ce:	de bf       	out	0x3e, r29	; 62
 7d0:	0f be       	out	0x3f, r0	; 63
 7d2:	cd bf       	out	0x3d, r28	; 61
 7d4:	8a 83       	std	Y+2, r24	; 0x02
 7d6:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState = STD_TYPES_OK;
 7d8:	81 e0       	ldi	r24, 0x01	; 1
 7da:	89 83       	std	Y+1, r24	; 0x01
	if((Copy_u8PortDirection = DIO_u8_OUTPUT) || (Copy_u8PortDirection = DIO_u8_INPUT))
 7dc:	81 e0       	ldi	r24, 0x01	; 1
 7de:	8b 83       	std	Y+3, r24	; 0x03
	{
		switch (Copy_u8PortId)
 7e0:	8a 81       	ldd	r24, Y+2	; 0x02
 7e2:	28 2f       	mov	r18, r24
 7e4:	30 e0       	ldi	r19, 0x00	; 0
 7e6:	3d 87       	std	Y+13, r19	; 0x0d
 7e8:	2c 87       	std	Y+12, r18	; 0x0c
 7ea:	8c 85       	ldd	r24, Y+12	; 0x0c
 7ec:	9d 85       	ldd	r25, Y+13	; 0x0d
 7ee:	81 30       	cpi	r24, 0x01	; 1
 7f0:	91 05       	cpc	r25, r1
 7f2:	71 f1       	breq	.+92     	; 0x850 <DIO_u8SetPortDirection+0x90>
 7f4:	2c 85       	ldd	r18, Y+12	; 0x0c
 7f6:	3d 85       	ldd	r19, Y+13	; 0x0d
 7f8:	22 30       	cpi	r18, 0x02	; 2
 7fa:	31 05       	cpc	r19, r1
 7fc:	2c f4       	brge	.+10     	; 0x808 <DIO_u8SetPortDirection+0x48>
 7fe:	8c 85       	ldd	r24, Y+12	; 0x0c
 800:	9d 85       	ldd	r25, Y+13	; 0x0d
 802:	00 97       	sbiw	r24, 0x00	; 0
 804:	69 f0       	breq	.+26     	; 0x820 <DIO_u8SetPortDirection+0x60>
 806:	69 c0       	rjmp	.+210    	; 0x8da <__stack+0x7b>
 808:	2c 85       	ldd	r18, Y+12	; 0x0c
 80a:	3d 85       	ldd	r19, Y+13	; 0x0d
 80c:	22 30       	cpi	r18, 0x02	; 2
 80e:	31 05       	cpc	r19, r1
 810:	b1 f1       	breq	.+108    	; 0x87e <__stack+0x1f>
 812:	8c 85       	ldd	r24, Y+12	; 0x0c
 814:	9d 85       	ldd	r25, Y+13	; 0x0d
 816:	83 30       	cpi	r24, 0x03	; 3
 818:	91 05       	cpc	r25, r1
 81a:	09 f4       	brne	.+2      	; 0x81e <DIO_u8SetPortDirection+0x5e>
 81c:	47 c0       	rjmp	.+142    	; 0x8ac <__stack+0x4d>
 81e:	5d c0       	rjmp	.+186    	; 0x8da <__stack+0x7b>
		{
			case DIO_u8_PORTA:
			switch (Copy_u8PortDirection)
 820:	8b 81       	ldd	r24, Y+3	; 0x03
 822:	28 2f       	mov	r18, r24
 824:	30 e0       	ldi	r19, 0x00	; 0
 826:	3b 87       	std	Y+11, r19	; 0x0b
 828:	2a 87       	std	Y+10, r18	; 0x0a
 82a:	8a 85       	ldd	r24, Y+10	; 0x0a
 82c:	9b 85       	ldd	r25, Y+11	; 0x0b
 82e:	00 97       	sbiw	r24, 0x00	; 0
 830:	59 f0       	breq	.+22     	; 0x848 <DIO_u8SetPortDirection+0x88>
 832:	2a 85       	ldd	r18, Y+10	; 0x0a
 834:	3b 85       	ldd	r19, Y+11	; 0x0b
 836:	21 30       	cpi	r18, 0x01	; 1
 838:	31 05       	cpc	r19, r1
 83a:	09 f0       	breq	.+2      	; 0x83e <DIO_u8SetPortDirection+0x7e>
 83c:	4f c0       	rjmp	.+158    	; 0x8dc <__stack+0x7d>
			{
				case DIO_u8_OUTPUT:DIO_u8_DDRA_REG = 0xff;break;
 83e:	ea e3       	ldi	r30, 0x3A	; 58
 840:	f0 e0       	ldi	r31, 0x00	; 0
 842:	8f ef       	ldi	r24, 0xFF	; 255
 844:	80 83       	st	Z, r24
 846:	4a c0       	rjmp	.+148    	; 0x8dc <__stack+0x7d>
				case DIO_u8_INPUT :DIO_u8_DDRA_REG = 0x00;break;
 848:	ea e3       	ldi	r30, 0x3A	; 58
 84a:	f0 e0       	ldi	r31, 0x00	; 0
 84c:	10 82       	st	Z, r1
 84e:	46 c0       	rjmp	.+140    	; 0x8dc <__stack+0x7d>
			}
			break;
			case DIO_u8_PORTB:
			switch (Copy_u8PortDirection)
 850:	8b 81       	ldd	r24, Y+3	; 0x03
 852:	28 2f       	mov	r18, r24
 854:	30 e0       	ldi	r19, 0x00	; 0
 856:	39 87       	std	Y+9, r19	; 0x09
 858:	28 87       	std	Y+8, r18	; 0x08
 85a:	88 85       	ldd	r24, Y+8	; 0x08
 85c:	99 85       	ldd	r25, Y+9	; 0x09
 85e:	00 97       	sbiw	r24, 0x00	; 0
 860:	51 f0       	breq	.+20     	; 0x876 <__stack+0x17>
 862:	28 85       	ldd	r18, Y+8	; 0x08
 864:	39 85       	ldd	r19, Y+9	; 0x09
 866:	21 30       	cpi	r18, 0x01	; 1
 868:	31 05       	cpc	r19, r1
 86a:	c1 f5       	brne	.+112    	; 0x8dc <__stack+0x7d>
			{
				case DIO_u8_OUTPUT:DIO_u8_DDRB_REG = 0xff;break;
 86c:	e7 e3       	ldi	r30, 0x37	; 55
 86e:	f0 e0       	ldi	r31, 0x00	; 0
 870:	8f ef       	ldi	r24, 0xFF	; 255
 872:	80 83       	st	Z, r24
 874:	33 c0       	rjmp	.+102    	; 0x8dc <__stack+0x7d>
				case DIO_u8_INPUT :DIO_u8_DDRB_REG = 0x00;break;
 876:	e7 e3       	ldi	r30, 0x37	; 55
 878:	f0 e0       	ldi	r31, 0x00	; 0
 87a:	10 82       	st	Z, r1
 87c:	2f c0       	rjmp	.+94     	; 0x8dc <__stack+0x7d>
			}
			break;
			case DIO_u8_PORTC:
			switch (Copy_u8PortDirection)
 87e:	8b 81       	ldd	r24, Y+3	; 0x03
 880:	28 2f       	mov	r18, r24
 882:	30 e0       	ldi	r19, 0x00	; 0
 884:	3f 83       	std	Y+7, r19	; 0x07
 886:	2e 83       	std	Y+6, r18	; 0x06
 888:	8e 81       	ldd	r24, Y+6	; 0x06
 88a:	9f 81       	ldd	r25, Y+7	; 0x07
 88c:	00 97       	sbiw	r24, 0x00	; 0
 88e:	51 f0       	breq	.+20     	; 0x8a4 <__stack+0x45>
 890:	2e 81       	ldd	r18, Y+6	; 0x06
 892:	3f 81       	ldd	r19, Y+7	; 0x07
 894:	21 30       	cpi	r18, 0x01	; 1
 896:	31 05       	cpc	r19, r1
 898:	09 f5       	brne	.+66     	; 0x8dc <__stack+0x7d>
			{
				case DIO_u8_OUTPUT:DIO_u8_DDRC_REG = 0xff;break;
 89a:	e4 e3       	ldi	r30, 0x34	; 52
 89c:	f0 e0       	ldi	r31, 0x00	; 0
 89e:	8f ef       	ldi	r24, 0xFF	; 255
 8a0:	80 83       	st	Z, r24
 8a2:	1c c0       	rjmp	.+56     	; 0x8dc <__stack+0x7d>
				case DIO_u8_INPUT :DIO_u8_DDRC_REG = 0x00;break;
 8a4:	e4 e3       	ldi	r30, 0x34	; 52
 8a6:	f0 e0       	ldi	r31, 0x00	; 0
 8a8:	10 82       	st	Z, r1
 8aa:	18 c0       	rjmp	.+48     	; 0x8dc <__stack+0x7d>
			}
			break;
			case DIO_u8_PORTD:
			switch (Copy_u8PortDirection)
 8ac:	8b 81       	ldd	r24, Y+3	; 0x03
 8ae:	28 2f       	mov	r18, r24
 8b0:	30 e0       	ldi	r19, 0x00	; 0
 8b2:	3d 83       	std	Y+5, r19	; 0x05
 8b4:	2c 83       	std	Y+4, r18	; 0x04
 8b6:	8c 81       	ldd	r24, Y+4	; 0x04
 8b8:	9d 81       	ldd	r25, Y+5	; 0x05
 8ba:	00 97       	sbiw	r24, 0x00	; 0
 8bc:	51 f0       	breq	.+20     	; 0x8d2 <__stack+0x73>
 8be:	2c 81       	ldd	r18, Y+4	; 0x04
 8c0:	3d 81       	ldd	r19, Y+5	; 0x05
 8c2:	21 30       	cpi	r18, 0x01	; 1
 8c4:	31 05       	cpc	r19, r1
 8c6:	51 f4       	brne	.+20     	; 0x8dc <__stack+0x7d>
			{
				case DIO_u8_OUTPUT:DIO_u8_DDRD_REG = 0xff;break;
 8c8:	e1 e3       	ldi	r30, 0x31	; 49
 8ca:	f0 e0       	ldi	r31, 0x00	; 0
 8cc:	8f ef       	ldi	r24, 0xFF	; 255
 8ce:	80 83       	st	Z, r24
 8d0:	05 c0       	rjmp	.+10     	; 0x8dc <__stack+0x7d>
				case DIO_u8_INPUT :DIO_u8_DDRD_REG = 0x00;break;
 8d2:	e1 e3       	ldi	r30, 0x31	; 49
 8d4:	f0 e0       	ldi	r31, 0x00	; 0
 8d6:	10 82       	st	Z, r1
 8d8:	01 c0       	rjmp	.+2      	; 0x8dc <__stack+0x7d>
			}
			break;
			default : Local_u8ErrorState = STD_TYPES_NOK;
 8da:	19 82       	std	Y+1, r1	; 0x01
	}
	else
	{
		Local_u8ErrorState = STD_TYPES_NOK;
	}
	return Local_u8ErrorState;
 8dc:	89 81       	ldd	r24, Y+1	; 0x01
}
 8de:	2d 96       	adiw	r28, 0x0d	; 13
 8e0:	0f b6       	in	r0, 0x3f	; 63
 8e2:	f8 94       	cli
 8e4:	de bf       	out	0x3e, r29	; 62
 8e6:	0f be       	out	0x3f, r0	; 63
 8e8:	cd bf       	out	0x3d, r28	; 61
 8ea:	cf 91       	pop	r28
 8ec:	df 91       	pop	r29
 8ee:	08 95       	ret

000008f0 <DIO_u8SetPortValue>:

    /*if port is output set value(0v or 5v)*/
u8 DIO_u8SetPortValue (u8 Copy_u8PortId, u8 Copy_u8PortValue){
 8f0:	df 93       	push	r29
 8f2:	cf 93       	push	r28
 8f4:	00 d0       	rcall	.+0      	; 0x8f6 <DIO_u8SetPortValue+0x6>
 8f6:	00 d0       	rcall	.+0      	; 0x8f8 <DIO_u8SetPortValue+0x8>
 8f8:	0f 92       	push	r0
 8fa:	cd b7       	in	r28, 0x3d	; 61
 8fc:	de b7       	in	r29, 0x3e	; 62
 8fe:	8a 83       	std	Y+2, r24	; 0x02
 900:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState = STD_TYPES_OK;
 902:	81 e0       	ldi	r24, 0x01	; 1
 904:	89 83       	std	Y+1, r24	; 0x01
	switch (Copy_u8PortId)
 906:	8a 81       	ldd	r24, Y+2	; 0x02
 908:	28 2f       	mov	r18, r24
 90a:	30 e0       	ldi	r19, 0x00	; 0
 90c:	3d 83       	std	Y+5, r19	; 0x05
 90e:	2c 83       	std	Y+4, r18	; 0x04
 910:	8c 81       	ldd	r24, Y+4	; 0x04
 912:	9d 81       	ldd	r25, Y+5	; 0x05
 914:	81 30       	cpi	r24, 0x01	; 1
 916:	91 05       	cpc	r25, r1
 918:	d1 f0       	breq	.+52     	; 0x94e <DIO_u8SetPortValue+0x5e>
 91a:	2c 81       	ldd	r18, Y+4	; 0x04
 91c:	3d 81       	ldd	r19, Y+5	; 0x05
 91e:	22 30       	cpi	r18, 0x02	; 2
 920:	31 05       	cpc	r19, r1
 922:	2c f4       	brge	.+10     	; 0x92e <DIO_u8SetPortValue+0x3e>
 924:	8c 81       	ldd	r24, Y+4	; 0x04
 926:	9d 81       	ldd	r25, Y+5	; 0x05
 928:	00 97       	sbiw	r24, 0x00	; 0
 92a:	61 f0       	breq	.+24     	; 0x944 <DIO_u8SetPortValue+0x54>
 92c:	1f c0       	rjmp	.+62     	; 0x96c <DIO_u8SetPortValue+0x7c>
 92e:	2c 81       	ldd	r18, Y+4	; 0x04
 930:	3d 81       	ldd	r19, Y+5	; 0x05
 932:	22 30       	cpi	r18, 0x02	; 2
 934:	31 05       	cpc	r19, r1
 936:	81 f0       	breq	.+32     	; 0x958 <DIO_u8SetPortValue+0x68>
 938:	8c 81       	ldd	r24, Y+4	; 0x04
 93a:	9d 81       	ldd	r25, Y+5	; 0x05
 93c:	83 30       	cpi	r24, 0x03	; 3
 93e:	91 05       	cpc	r25, r1
 940:	81 f0       	breq	.+32     	; 0x962 <DIO_u8SetPortValue+0x72>
 942:	14 c0       	rjmp	.+40     	; 0x96c <DIO_u8SetPortValue+0x7c>
	{
		case DIO_u8_PORTA:DIO_u8_PORTA_REG = Copy_u8PortValue;break;
 944:	eb e3       	ldi	r30, 0x3B	; 59
 946:	f0 e0       	ldi	r31, 0x00	; 0
 948:	8b 81       	ldd	r24, Y+3	; 0x03
 94a:	80 83       	st	Z, r24
 94c:	10 c0       	rjmp	.+32     	; 0x96e <DIO_u8SetPortValue+0x7e>
		case DIO_u8_PORTB:DIO_u8_PORTB_REG = Copy_u8PortValue;break;
 94e:	e8 e3       	ldi	r30, 0x38	; 56
 950:	f0 e0       	ldi	r31, 0x00	; 0
 952:	8b 81       	ldd	r24, Y+3	; 0x03
 954:	80 83       	st	Z, r24
 956:	0b c0       	rjmp	.+22     	; 0x96e <DIO_u8SetPortValue+0x7e>
		case DIO_u8_PORTC:DIO_u8_PORTC_REG = Copy_u8PortValue;break;
 958:	e5 e3       	ldi	r30, 0x35	; 53
 95a:	f0 e0       	ldi	r31, 0x00	; 0
 95c:	8b 81       	ldd	r24, Y+3	; 0x03
 95e:	80 83       	st	Z, r24
 960:	06 c0       	rjmp	.+12     	; 0x96e <DIO_u8SetPortValue+0x7e>
		case DIO_u8_PORTD:DIO_u8_PORTD_REG = Copy_u8PortValue;break;
 962:	e2 e3       	ldi	r30, 0x32	; 50
 964:	f0 e0       	ldi	r31, 0x00	; 0
 966:	8b 81       	ldd	r24, Y+3	; 0x03
 968:	80 83       	st	Z, r24
 96a:	01 c0       	rjmp	.+2      	; 0x96e <DIO_u8SetPortValue+0x7e>
		default : Local_u8ErrorState = STD_TYPES_NOK;
 96c:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ErrorState;
 96e:	89 81       	ldd	r24, Y+1	; 0x01
}      
 970:	0f 90       	pop	r0
 972:	0f 90       	pop	r0
 974:	0f 90       	pop	r0
 976:	0f 90       	pop	r0
 978:	0f 90       	pop	r0
 97a:	cf 91       	pop	r28
 97c:	df 91       	pop	r29
 97e:	08 95       	ret

00000980 <DIO_u8GetPortValue>:
 
 /* if port is input read value(0v or 5v)*/
u8 DIO_u8GetPortValue (u8 Copy_u8PortId, u8 * Copy_pu8ReturnedPortValue){
 980:	df 93       	push	r29
 982:	cf 93       	push	r28
 984:	00 d0       	rcall	.+0      	; 0x986 <DIO_u8GetPortValue+0x6>
 986:	00 d0       	rcall	.+0      	; 0x988 <DIO_u8GetPortValue+0x8>
 988:	00 d0       	rcall	.+0      	; 0x98a <DIO_u8GetPortValue+0xa>
 98a:	cd b7       	in	r28, 0x3d	; 61
 98c:	de b7       	in	r29, 0x3e	; 62
 98e:	8a 83       	std	Y+2, r24	; 0x02
 990:	7c 83       	std	Y+4, r23	; 0x04
 992:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8ErrorState = STD_TYPES_OK;
 994:	81 e0       	ldi	r24, 0x01	; 1
 996:	89 83       	std	Y+1, r24	; 0x01
	if(Copy_pu8ReturnedPortValue != NULL)
 998:	8b 81       	ldd	r24, Y+3	; 0x03
 99a:	9c 81       	ldd	r25, Y+4	; 0x04
 99c:	00 97       	sbiw	r24, 0x00	; 0
 99e:	e9 f1       	breq	.+122    	; 0xa1a <DIO_u8GetPortValue+0x9a>
	{
		switch (Copy_u8PortId)
 9a0:	8a 81       	ldd	r24, Y+2	; 0x02
 9a2:	28 2f       	mov	r18, r24
 9a4:	30 e0       	ldi	r19, 0x00	; 0
 9a6:	3e 83       	std	Y+6, r19	; 0x06
 9a8:	2d 83       	std	Y+5, r18	; 0x05
 9aa:	8d 81       	ldd	r24, Y+5	; 0x05
 9ac:	9e 81       	ldd	r25, Y+6	; 0x06
 9ae:	81 30       	cpi	r24, 0x01	; 1
 9b0:	91 05       	cpc	r25, r1
 9b2:	e1 f0       	breq	.+56     	; 0x9ec <DIO_u8GetPortValue+0x6c>
 9b4:	2d 81       	ldd	r18, Y+5	; 0x05
 9b6:	3e 81       	ldd	r19, Y+6	; 0x06
 9b8:	22 30       	cpi	r18, 0x02	; 2
 9ba:	31 05       	cpc	r19, r1
 9bc:	2c f4       	brge	.+10     	; 0x9c8 <DIO_u8GetPortValue+0x48>
 9be:	8d 81       	ldd	r24, Y+5	; 0x05
 9c0:	9e 81       	ldd	r25, Y+6	; 0x06
 9c2:	00 97       	sbiw	r24, 0x00	; 0
 9c4:	61 f0       	breq	.+24     	; 0x9de <DIO_u8GetPortValue+0x5e>
 9c6:	27 c0       	rjmp	.+78     	; 0xa16 <DIO_u8GetPortValue+0x96>
 9c8:	2d 81       	ldd	r18, Y+5	; 0x05
 9ca:	3e 81       	ldd	r19, Y+6	; 0x06
 9cc:	22 30       	cpi	r18, 0x02	; 2
 9ce:	31 05       	cpc	r19, r1
 9d0:	a1 f0       	breq	.+40     	; 0x9fa <DIO_u8GetPortValue+0x7a>
 9d2:	8d 81       	ldd	r24, Y+5	; 0x05
 9d4:	9e 81       	ldd	r25, Y+6	; 0x06
 9d6:	83 30       	cpi	r24, 0x03	; 3
 9d8:	91 05       	cpc	r25, r1
 9da:	b1 f0       	breq	.+44     	; 0xa08 <DIO_u8GetPortValue+0x88>
 9dc:	1c c0       	rjmp	.+56     	; 0xa16 <DIO_u8GetPortValue+0x96>
		{
			case DIO_u8_PORTA: * Copy_pu8ReturnedPortValue = DIO_u8_PINA_REG;break;
 9de:	e9 e3       	ldi	r30, 0x39	; 57
 9e0:	f0 e0       	ldi	r31, 0x00	; 0
 9e2:	80 81       	ld	r24, Z
 9e4:	eb 81       	ldd	r30, Y+3	; 0x03
 9e6:	fc 81       	ldd	r31, Y+4	; 0x04
 9e8:	80 83       	st	Z, r24
 9ea:	18 c0       	rjmp	.+48     	; 0xa1c <DIO_u8GetPortValue+0x9c>
			case DIO_u8_PORTB: * Copy_pu8ReturnedPortValue = DIO_u8_PINB_REG;break;
 9ec:	e6 e3       	ldi	r30, 0x36	; 54
 9ee:	f0 e0       	ldi	r31, 0x00	; 0
 9f0:	80 81       	ld	r24, Z
 9f2:	eb 81       	ldd	r30, Y+3	; 0x03
 9f4:	fc 81       	ldd	r31, Y+4	; 0x04
 9f6:	80 83       	st	Z, r24
 9f8:	11 c0       	rjmp	.+34     	; 0xa1c <DIO_u8GetPortValue+0x9c>
			case DIO_u8_PORTC: * Copy_pu8ReturnedPortValue = DIO_u8_PINC_REG;break;
 9fa:	e3 e3       	ldi	r30, 0x33	; 51
 9fc:	f0 e0       	ldi	r31, 0x00	; 0
 9fe:	80 81       	ld	r24, Z
 a00:	eb 81       	ldd	r30, Y+3	; 0x03
 a02:	fc 81       	ldd	r31, Y+4	; 0x04
 a04:	80 83       	st	Z, r24
 a06:	0a c0       	rjmp	.+20     	; 0xa1c <DIO_u8GetPortValue+0x9c>
			case DIO_u8_PORTD: * Copy_pu8ReturnedPortValue = DIO_u8_PIND_REG;break;
 a08:	e0 e3       	ldi	r30, 0x30	; 48
 a0a:	f0 e0       	ldi	r31, 0x00	; 0
 a0c:	80 81       	ld	r24, Z
 a0e:	eb 81       	ldd	r30, Y+3	; 0x03
 a10:	fc 81       	ldd	r31, Y+4	; 0x04
 a12:	80 83       	st	Z, r24
 a14:	03 c0       	rjmp	.+6      	; 0xa1c <DIO_u8GetPortValue+0x9c>
			default : Local_u8ErrorState = STD_TYPES_NOK;
 a16:	19 82       	std	Y+1, r1	; 0x01
 a18:	01 c0       	rjmp	.+2      	; 0xa1c <DIO_u8GetPortValue+0x9c>
		}
	}
	else
	{
		Local_u8ErrorState = STD_TYPES_NOK;
 a1a:	19 82       	std	Y+1, r1	; 0x01
	}
	return Local_u8ErrorState;
 a1c:	89 81       	ldd	r24, Y+1	; 0x01
}
 a1e:	26 96       	adiw	r28, 0x06	; 6
 a20:	0f b6       	in	r0, 0x3f	; 63
 a22:	f8 94       	cli
 a24:	de bf       	out	0x3e, r29	; 62
 a26:	0f be       	out	0x3f, r0	; 63
 a28:	cd bf       	out	0x3d, r28	; 61
 a2a:	cf 91       	pop	r28
 a2c:	df 91       	pop	r29
 a2e:	08 95       	ret

00000a30 <_exit>:
 a30:	f8 94       	cli

00000a32 <__stop_program>:
 a32:	ff cf       	rjmp	.-2      	; 0xa32 <__stop_program>
